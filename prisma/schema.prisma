generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
  directUrl = env("DIRECT_URL")
}

// Phase 8 Core Models
model User {
  id            String    @id @default(cuid())
  email         String    @unique
  passwordHash  String?
  name          String?
  image         String?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  accounts      Account[]
  sessions      Session[]
  roles         UserRole[]
  reviews       Review[]
  onboarding    UserOnboarding?

  @@map("users")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String? @db.Text
  access_token      String? @db.Text
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String? @db.Text
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@map("accounts")
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("sessions")
}

model UserRole {
  id     String @id @default(cuid())
  userId String
  role   String
  user   User   @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([userId, role])
  @@map("user_roles")
}

model Review {
  id        String   @id @default(cuid())
  userId    String
  content   String
  rating    Int
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("reviews")
}

model UserOnboarding {
  id                String   @id @default(cuid())
  userId            String   @unique
  step              Int      @default(1)
  completedAt       DateTime?
  wpCredentialsSet  Boolean  @default(false)
  gscConnected      Boolean  @default(false)
  ga4Connected      Boolean  @default(false)
  user              User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@map("user_onboarding")
}

// Infrastructure Models
model Credential {
  id          String   @id @default(cuid())
  provider    String
  encryptedData String @db.Text
  iv          String
  tag         String
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@unique([provider])
  @@map("credentials")
}

model Article {
  id              String    @id @default(cuid())
  title           String
  slug            String    @unique
  content         String?   @db.Text
  excerpt         String?
  status          String    @default("draft")
  publishedAt     DateTime?
  createdAt       DateTime  @default(now())
  updatedAt       DateTime  @updatedAt
  metaTitle       String?
  metaDescription String?
  canonicalUrl    String?
  keywords        String[]
  media           Media[]
  seoData         SEOData?

  @@map("articles")
}

model Media {
  id        String @id @default(cuid())
  articleId String
  filename  String
  url       String
  mimeType  String
  size      Int
  metadata  Json?
  article   Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("media")
}

model SEOData {
  id               String  @id @default(cuid())
  articleId        String  @unique
  readabilityScore Float?
  keywordDensity   Json?
  internalLinks    Json?
  structuredData   Json?
  article          Article @relation(fields: [articleId], references: [id], onDelete: Cascade)

  @@map("seo_data")
}
